import {
  createFilters as e,
  toggleActiveFilter as r,
  getData as t,
} from './shared.js'
let projectsURL = '/data/projects.json',
  technologiesURL = '/data/technologies.json',
  projectsContent = document.querySelector('.projects__content'),
  projectsFilterContainer = document.getElementById(
    'project__filters__container'
  ),
  filtersArray = ['All', 'Front', 'Back', 'FullStack'],
  filterTag = 'All',
  fileName = 'projects'
export function createProject(e, t) {
  console.log(e),
    console.log(t),
    e.forEach((e) => {
      if (e.isVisible) {
        let r = document.createElement('div')
        r.classList.add('projects__row')
        let n = document.createElement('div')
        n.classList.add('projects__row-content')
        let a = document.createElement('div')
        a.classList.add('projects__row-img-cont')
        let i = document.createElement('h3')
        i.classList.add('projects__row-content-title'),
          (i.textContent = e.title)
        let o = document.createElement('p')
        o.classList.add('projects__row-content-desc'),
          (o.innerHTML = e.description)
        let l = document.createElement('div')
        l.classList.add('projects__row-content-technologies-container'),
          t.forEach((t) => {
            e.technologies.forEach((e) => {
              if (t.name === e) {
                let r = document.createElement('img')
                r.classList.add(
                  'projects__row-content-technologies-container-icon'
                ),
                  r.setAttribute('src', t.iconURL),
                  r.setAttribute('alt', t.alt),
                  r.setAttribute('loading', 'lazy'),
                  r.setAttribute('aria-hidden', 'true')
                let n = document.createElement('p')
                n.classList.add(
                  'projects__row-content-technologies-container-name'
                ),
                  (n.textContent = t.name),
                  l.appendChild(r),
                  l.appendChild(n)
              }
            })
          })
        let s = document.createElement('div')
        if (
          (s.classList.add('projects__row-content-button-container'),
          '' !== e['live-link'])
        ) {
          let c = document.createElement('a')
          c.classList.add(
            'btn',
            'btn--med',
            'btn--theme',
            'dynamicBgClr',
            'btn--card-size'
          ),
            c.setAttribute('href', e['live-link']),
            c.setAttribute('target', '_blank'),
            c.setAttribute('aria-label', 'Link to the project demo'),
            c.setAttribute('rel', 'noopener noreferrer'),
            (c.innerHTML =
              "<i class='fa-solid fa-eye' aria-hidden='true'></i> Live"),
            s.appendChild(c)
        }
        if ('' !== e['source-link']) {
          let d = document.createElement('a')
          d.classList.add(
            'btn',
            'btn--med',
            'btn--theme',
            'dynamicBgClr',
            'btn--card-size'
          ),
            d.setAttribute('href', e['source-link']),
            d.setAttribute('target', '_blank'),
            d.setAttribute('aria-label', 'Link to the project source code'),
            d.setAttribute('rel', 'noopener noreferrer'),
            (d.innerHTML =
              "<i class='fa-brands fa-github' aria-hidden='true'></i> Source"),
            s.appendChild(d)
        }
        let p = document.createElement('img')
        p.setAttribute('src', e.imageURL),
          p.setAttribute('alt', e.title),
          p.setAttribute('loading', 'lazy'),
          p.classList.add('projects__row-img'),
          a.appendChild(p),
          n.appendChild(i),
          n.appendChild(o),
          n.appendChild(l),
          n.appendChild(s),
          r.appendChild(n),
          r.appendChild(a),
          projectsContent.appendChild(r)
      }
    })
}
t('/data/projects.json')
  .then((n) => {
    n
      ? t('/data/technologies.json')
          .then((t) => {
            if (t) {
              e(filtersArray, projectsFilterContainer)
              let a = document.querySelectorAll(
                '#project__filters__container .filter'
              )
              r(a, n, filterTag, projectsContent, 'projects', t),
                createProject(n, t)
            } else console.error('Failed to load technologies data')
          })
          .catch((e) => {
            console.error('Error loading technologies JSON', e)
          })
      : console.error('Failed to load project data')
  })
  .catch((e) => {
    console.error('Error loading projects JSON', e)
  })
